//     _________  ____ _____________________
//    / ___/ __ \/ __ `/ ___/ ___/ ___/ ___/
//   / /  / /_/ / /_/ / /  / /__(__  |__  )
//  /_/   \____/\__,_/_(_) \___/____/____/
//
// +==============================================================================
// | SIZE
// +==============================================================================

@mixin height($height, $u: px, $denominator: 1) {
	@if $height != null and $height != false {
		$calc-height: $height / $denominator;
		@if $u == vh {
			height: #{$calc-height}vh;
		} @else if $u != rem {
			height: rem-calc($calc-height);
		} @else {
			height: px-calc($calc-height);
		}
	}
}

@mixin width($width, $u: px, $d: 1) {
	@if $width != null and $width != false {
		$calc-width: $width / $d;
		@if $u == vw {
			width: #{$calc-width}vw;
		} @else if $u != rem {
			width: rem-calc($calc-width);
		} @else {
			width: rem-set($calc-width);
		}
	}
}

@mixin square($size, $u: px, $d: 1) {
	@include height($size, $u, $d);
	@include width($size, $u, $d);
}

@mixin size($size) {
	@if length($size) == 1 {
		@if $size == auto {
			width:  $size;
			height: $size;
		} @else if unitless($size) {
			width:  $size + rem;
			height: $size + rem;
		} @else if not(unitless($size)) {
			width:  $size;
			height: $size;
		}
	}
	// Width x Height
	@if length($size) == 2 {
		$width: nth($size, 1);
		$height: nth($size, 2);

		@if $width == auto {
			width: $width;
		} @else if not(unitless($width)) {
			width: $width;
		} @else if unitless($width) {
			width: $width + rem;
		}

		@if $height == auto {
			height: $height;
		} @else if not(unitless($height)) {
			height: $height;
		} @else if unitless($height) {
			height: $height + rem;
		}
	}
}

@mixin w100() {
	width: 100%;
}

@mixin h100() {
	height: 100%;
}

/// set a container to proportionally scale its immediate child element
/// @param {number} $numerator (16)  - numerator to calculate ratio
/// @param {number} $denominator (9) - denominator to calculate ratio
/// @example
///     @include proportional-container(2,1);

@mixin proportional-container($numerator:16, $denominator:9, $direction:vertical) {
	position: relative;
	@if $direction == vertical {
		padding-bottom: percent-calc($denominator, $numerator);
		height:         0;
	} @else if $direction == horizontal {
		padding-left:   percent-calc($numerator, $denominator);
		width:          0;
	} @else {
		@warn "smh, '$direction' is not a valid direction ~ via proportional-container"
	}
	overflow: hidden;
	> * {
		position: absolute;
		display:  block;
		top:      0;
		left:     0;
		width:    100%;
		//height: 100%;
	}
}

@mixin pc($args...) {
	@include proportional-container($args...);
}

